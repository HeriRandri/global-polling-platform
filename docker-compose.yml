services:
  db:
    image: mysql:8
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: polling
      MYSQL_USER: dev
      MYSQL_PASSWORD: devpass
    volumes:
      - mysql_data:/var/lib/mysql   # ✅ Persistance MySQL
    networks:
      - app-network

  redis:
    image: redis:alpine
    restart: always
    command: ["redis-server", "--appendonly", "yes"]  # ✅ Active persistance Redis (AOF)
    volumes:
      - redis_data:/data            # ✅ Persistance Redis
    networks:
      - app-network

  backend:
    build: ./backend/api
    restart: always
    environment:
      DB_HOST: db
      DB_PORT: 3306
      DB_USER: dev
      DB_PASS: devpass
      DB_NAME: polling
      REDIS_HOST: redis
    depends_on:
      - db
      - redis
    networks:
      - app-network

  frontend:
    build: ./frontend
    restart: always
    environment:
      NEXT_PUBLIC_API_URL: /api   # ✅ Appelle via Nginx
    depends_on:
      - backend
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    networks:
      - app-network

volumes:
  mysql_data:   # ✅ Volume persistant pour MySQL
  redis_data:   # ✅ Volume persistant pour Redis

networks:
  app-network:
    driver: bridge
